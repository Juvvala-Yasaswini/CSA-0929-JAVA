class Customer {
    private int accountNo;
    private String accName;
    private double balance;

    public Customer(int accountNo, String accName, double balance) {
        this.accountNo = accountNo;
        this.accName = accName;
        this.balance = balance;
    }


    public synchronized void deposit(double amount) {
        System.out.println("Depositing amount: " + amount);
        balance += amount;
        System.out.println("New balance after deposit: " + balance);
        notify();
    }


    public synchronized void withdraw(double amount) {
        System.out.println("Withdrawal requested: " + amount);
        while (balance < amount) {
            System.out.println("Insufficient balance. Waiting for deposit...");
            try {
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        balance -= amount;
        System.out.println("Withdrawal successful. Remaining balance: " + balance);
    }
}

public class Main {
    public static void main(String[] args) {
        Customer customer = new Customer(123456, "John Doe", 10000.00);


        Thread withdrawalThread = new Thread(() -> {
            customer.withdraw(15000.00);
        });
        withdrawalThread.start();


        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }


        Thread depositThread = new Thread(() -> {
            customer.deposit(5000.00); 
        });
        depositThread.start();
    }
}


output:

Withdrawal requested: 15000.0
Insufficient balance. Waiting for deposit...
Depositing amount: 5000.0
New balance after deposit: 15000.0
Withdrawal successful. Remaining balance: 0.0

